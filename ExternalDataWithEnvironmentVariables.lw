composition

import Fugue.AWS.Pattern.Network as Network
import Fugue.AWS as AWS

region: AWS.Region.fromString(String.getEnvOrError("DEMO_REGION")) ?| AWS.Us-east-1
debugRegion: Debug.trace {message: "Found:" ++ String.getEnvOrError("DEMO_REGION")}

name: String.getEnvOrError("DEMO_NAME")
debugName: Debug.trace {message: "Found:" ++ name}

cidr: String.getEnvOrError("DEMO_CIDR")
debugCidr: Debug.trace {message: "Found:" ++ cidr}

pubSubA: String.getEnvOrError("DEMO_PUBSUBA")
debugPubSubA: Debug.trace {message: "Found:" ++ pubSubA}

pubSubB: String.getEnvOrError("DEMO_PUBSUBB")
debugPubSubB: Debug.trace {message: "Found:" ++ pubSubB}

demoNet:
  Network.new {
    name: name,
    cidr: cidr,
    region: region,
    publicSubnets: [
      (AWS.A, pubSubA),
      (AWS.C, pubSubB),
    ],
    privateSubnets: [],
    enableDnsSupport: False,
    enableDnsHostnames: False,
    tags: [AWS.tag("Name", name)]
  }
